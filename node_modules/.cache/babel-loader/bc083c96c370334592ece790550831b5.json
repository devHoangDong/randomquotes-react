{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\HOANG TRIEU\\\\Desktop\\\\Frontend\\\\quotereact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\HOANG TRIEU\\\\Desktop\\\\Frontend\\\\quotereact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\HOANG TRIEU\\\\Desktop\\\\Frontend\\\\quotereact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\HOANG TRIEU\\\\Desktop\\\\Frontend\\\\quotereact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\HOANG TRIEU\\\\Desktop\\\\Frontend\\\\quotereact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\HOANG TRIEU\\\\Desktop\\\\Frontend\\\\quotereact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOANG TRIEU\\\\Desktop\\\\Frontend\\\\quotereact\\\\src\\\\components\\\\Dich.js\";\nimport React, { Component } from 'react';\n\nvar Dich = /*#__PURE__*/function (_Component) {\n  _inherits(Dich, _Component);\n\n  function Dich(props) {\n    var _this;\n\n    _classCallCheck(this, Dich);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dich).call(this, props));\n\n    _this.handleChange = function () {\n      _this.setState({\n        quote: _this.props.quote\n      });\n\n      console.log(_this.props.quote);\n      var api = \"https://api.mymemory.translated.net/get?q=\".concat(_this.props.quote, \"&langpair=en|vi\");\n      fetch(api).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        _this.setState({\n          ketqua: response\n        });\n\n        _this.setState({\n          isLoading: true\n        });\n      });\n    };\n\n    _this.state = {\n      ketqua: {},\n      isLoading: false,\n      quote: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Dich, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      console.log(this.props.quote);\n\n      if (prevProps.quote !== this.props.quote) {\n        window.text = this.props.quote;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"trans-button\",\n          onClick: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }\n        }, \"Translate\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"quote-tran\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }\n        }, this.state.ketqua.responseData.translatedText));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"trans-button\",\n          onClick: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        }, \"Translate\"));\n      }\n    }\n  }]);\n\n  return Dich;\n}(Component);\n\nexport default Dich;","map":{"version":3,"sources":["C:/Users/HOANG TRIEU/Desktop/Frontend/quotereact/src/components/Dich.js"],"names":["React","Component","Dich","props","handleChange","setState","quote","console","log","api","fetch","then","response","json","ketqua","isLoading","state","bind","prevProps","prevState","window","text","responseData","translatedText"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;IAEMC,I;;;AACE,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;;AADiB,UAe3BC,YAf2B,GAeZ,YAAM;AACjB,YAAKC,QAAL,CACI;AAACC,QAAAA,KAAK,EAAG,MAAKH,KAAL,CAAWG;AAApB,OADJ;;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKL,KAAL,CAAWG,KAAvB;AACA,UAAMG,GAAG,uDAAgD,MAAKN,KAAL,CAAWG,KAA3D,oBAAT;AACAI,MAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADd,EAECF,IAFD,CAEM,UAAAC,QAAQ,EAAI;AACd,cAAKP,QAAL,CAAc;AACVS,UAAAA,MAAM,EAAGF;AADC,SAAd;;AAGA,cAAKP,QAAL,CAAc;AACVU,UAAAA,SAAS,EAAG;AADF,SAAd;AAGH,OATD;AAUH,KA/B0B;;AAEjB,UAAKC,KAAL,GAAa;AACXF,MAAAA,MAAM,EAAG,EADE;AAEXC,MAAAA,SAAS,EAAG,KAFD;AAGXT,MAAAA,KAAK,EAAG;AAHG,KAAb;AAKA,UAAKF,YAAL,GAAoB,MAAKA,YAAL,CAAkBa,IAAlB,uDAApB;AAPiB;AAQlB;;;;uCACUC,S,EAAWC,S,EAAU;AACpCZ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWG,KAAvB;;AACA,UAAIY,SAAS,CAACZ,KAAV,KAAoB,KAAKH,KAAL,CAAWG,KAAnC,EAA0C;AACtCc,QAAAA,MAAM,CAACC,IAAP,GAAa,KAAKlB,KAAL,CAAWG,KAAxB;AACH;AACJ;;;6BAkBQ;AACL,UAAI,KAAKU,KAAL,CAAWD,SAAf,EAA0B;AAC1B,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAE,KAAKX,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6B,KAAKY,KAAL,CAAWF,MAAX,CAAkBQ,YAAlB,CAA+BC,cAA5D,CAFJ,CADA;AAMC,OAPD,MAOO;AAAC,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACX;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAE,KAAKnB,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADW,CAAP;AAED;AACV;;;;EA5CkBH,S;;AA8CnB,eAAeC,IAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Dich extends Component {\r\n        constructor(props) {\r\n          super(props);\r\n          this.state = {\r\n            ketqua : {},\r\n            isLoading : false,\r\n            quote : ''\r\n          }\r\n          this.handleChange = this.handleChange.bind(this)\r\n        }\r\ncomponentDidUpdate(prevProps, prevState){\r\n    console.log(this.props.quote)\r\n    if (prevProps.quote !== this.props.quote) {\r\n        window.text= this.props.quote\r\n    }\r\n}\r\nhandleChange = () => {\r\n    this.setState(\r\n        {quote : this.props.quote}\r\n    )\r\n    console.log(this.props.quote)\r\n    const api = `https://api.mymemory.translated.net/get?q=${this.props.quote}&langpair=en|vi`;\r\n    fetch(api)\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        this.setState({\r\n            ketqua : response\r\n        })\r\n        this.setState({\r\n            isLoading : true\r\n        })\r\n    });\r\n}\r\nrender() {\r\n    if (this.state.isLoading) {\r\n    return (\r\n    <div>\r\n        <button className=\"trans-button\" onClick={this.handleChange}>Translate</button>\r\n        <div className=\"quote-tran\">{this.state.ketqua.responseData.translatedText}</div>\r\n    </div>\r\n    )\r\n    } else {return <div>\r\n        <button className=\"trans-button\" onClick={this.handleChange}>Translate</button>\r\n    </div>}\r\n}\r\n}\r\nexport default Dich;"]},"metadata":{},"sourceType":"module"}