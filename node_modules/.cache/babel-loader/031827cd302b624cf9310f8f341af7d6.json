{"ast":null,"code":"import _slicedToArray from \"/Users/macos/Desktop/Frontend/quotereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macos/Desktop/Frontend/quotereact/src/components/Dich.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useRef } from 'react';\nDich.propTypes = {\n  ketqua: PropTypes.string,\n  quote: PropTypes.string,\n  cleartran: PropTypes.bool,\n  load: PropTypes.bool\n};\nDich.defaultProps = {\n  ketqua: '',\n  quote: '',\n  cleartran: null,\n  load: null\n};\n\nfunction Dich(props) {\n  var quote = props.quote,\n      clear = props.clear;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      ketqua = _useState2[0],\n      setKetqua = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      load = _useState4[0],\n      setLoad = _useState4[1];\n\n  var _useState5 = useState(clear),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cleartran = _useState6[0],\n      setCleartran = _useState6[1];\n\n  var prevCleartran = useRef(clear);\n\n  function handleChange() {\n    // const api = `https://api.mymemory.translated.net/get?q=${quote}&langpair=en|vi`;\n    // fetch(api)\n    // .then(response => response.json())\n    // .then(response => {\n    // const kq = response.responseData.translatedText;\n    setKetqua('kq');\n    setLoad(true);\n    setCleartran(!cleartran); // })\n    // .catch((error) => {\n    //     console.log(error)\n    //   })\n  }\n\n  useEffect(function () {\n    handleChange();\n  }, [cleartran]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"trans-button\",\n    onClick: handleChange(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Translate\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quote-tran\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, ketqua));\n}\n\nexport default Dich;","map":{"version":3,"sources":["/Users/macos/Desktop/Frontend/quotereact/src/components/Dich.js"],"names":["React","useState","useEffect","PropTypes","useRef","Dich","propTypes","ketqua","string","quote","cleartran","bool","load","defaultProps","props","clear","setKetqua","setLoad","setCleartran","prevCleartran","handleChange"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,OAAvB;AAGAC,IAAI,CAACC,SAAL,GAAiB;AACbC,EAAAA,MAAM,EAAEJ,SAAS,CAACK,MADL;AAEbC,EAAAA,KAAK,EAAEN,SAAS,CAACK,MAFJ;AAGbE,EAAAA,SAAS,EAAEP,SAAS,CAACQ,IAHR;AAIbC,EAAAA,IAAI,EAAET,SAAS,CAACQ;AAJH,CAAjB;AAMAN,IAAI,CAACQ,YAAL,GAAoB;AAChBN,EAAAA,MAAM,EAAE,EADQ;AAEhBE,EAAAA,KAAK,EAAE,EAFS;AAGhBC,EAAAA,SAAS,EAAE,IAHK;AAIhBE,EAAAA,IAAI,EAAE;AAJU,CAApB;;AAOA,SAASP,IAAT,CAAcS,KAAd,EAAqB;AAAA,MACVL,KADU,GACOK,KADP,CACVL,KADU;AAAA,MACHM,KADG,GACOD,KADP,CACHC,KADG;;AAAA,kBAEad,QAAQ,CAAC,EAAD,CAFrB;AAAA;AAAA,MAETM,MAFS;AAAA,MAEDS,SAFC;;AAAA,mBAGSf,QAAQ,CAAC,KAAD,CAHjB;AAAA;AAAA,MAGTW,IAHS;AAAA,MAGHK,OAHG;;AAAA,mBAImBhB,QAAQ,CAACc,KAAD,CAJ3B;AAAA;AAAA,MAITL,SAJS;AAAA,MAIEQ,YAJF;;AAKjB,MAAMC,aAAa,GAAGf,MAAM,CAACW,KAAD,CAA5B;;AAEA,WAASK,YAAT,GAAwB;AAEpB;AACA;AACA;AACA;AACI;AACAJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAC,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,IAAAA,YAAY,CAAC,CAACR,SAAF,CAAZ,CATgB,CAUpB;AACA;AACA;AACA;AACH;;AACDR,EAAAA,SAAS,CAAC,YAAM;AACZkB,IAAAA,YAAY;AACf,GAFQ,EAEP,CAACV,SAAD,CAFO,CAAT;AAGI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAEU,YAAY,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6Bb,MAA7B,CAFJ,CADJ;AAMP;;AACD,eAAeF,IAAf","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useRef } from 'react';\r\n\r\n\r\nDich.propTypes = {\r\n    ketqua: PropTypes.string,\r\n    quote: PropTypes.string,\r\n    cleartran: PropTypes.bool,\r\n    load: PropTypes.bool,\r\n}\r\nDich.defaultProps = {\r\n    ketqua: '',\r\n    quote: '',\r\n    cleartran: null,\r\n    load: null,\r\n}\r\n\r\nfunction Dich(props) {\r\n    const{ quote, clear } = props; \r\n    const [ ketqua, setKetqua ] = useState('');\r\n    const [ load, setLoad ] = useState(false);\r\n    const [ cleartran, setCleartran ] = useState(clear);\r\n    const prevCleartran = useRef(clear);\r\n\r\n    function handleChange() {\r\n        \r\n        // const api = `https://api.mymemory.translated.net/get?q=${quote}&langpair=en|vi`;\r\n        // fetch(api)\r\n        // .then(response => response.json())\r\n        // .then(response => {\r\n            // const kq = response.responseData.translatedText;\r\n            setKetqua('kq');\r\n            setLoad(true);\r\n            setCleartran(!cleartran);\r\n        // })\r\n        // .catch((error) => {\r\n        //     console.log(error)\r\n        //   })\r\n    }\r\n    useEffect(() => {\r\n        handleChange()\r\n    },[cleartran])\r\n        return (\r\n            <div>\r\n                <button className=\"trans-button\" onClick={handleChange()}>Translate</button>\r\n                <div className=\"quote-tran\">{ketqua}</div>\r\n            </div>\r\n            )\r\n}\r\nexport default Dich;"]},"metadata":{},"sourceType":"module"}