{"ast":null,"code":"import _slicedToArray from \"/Users/macos/Desktop/Frontend/quotereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macos/Desktop/Frontend/quotereact/src/components/Dich.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nDich.propTypes = {\n  ketqua: PropTypes.number,\n  quote: PropTypes.string\n};\nDich.defaultProps = {\n  ketqua: 0,\n  quote: ''\n};\n\nfunction Dich(props) {\n  var quote = props.quote,\n      clear = props.clear;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      ketqua = _useState2[0],\n      setKetqua = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      load = _useState4[0],\n      setLoad = _useState4[1];\n\n  var _useState5 = useState(clear),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cleartran = _useState6[0],\n      setCleartran = _useState6[1];\n\n  function handleChange() {\n    var api = \"https://api.mymemory.translated.net/get?q=\".concat(quote, \"&langpair=en|vi\");\n    fetch(api).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      var kq = response.responseData.translatedText;\n      setKetqua(kq);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  useEffect(handleChange(), []);\n  useEffect(setKetqua(''), [clear]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"trans-button\",\n    onClick: handleChange(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Translate\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quote-tran\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, ketqua));\n}\n\nexport default Dich;","map":{"version":3,"sources":["/Users/macos/Desktop/Frontend/quotereact/src/components/Dich.js"],"names":["React","useState","useEffect","PropTypes","Dich","propTypes","ketqua","number","quote","string","defaultProps","props","clear","setKetqua","load","setLoad","cleartran","setCleartran","handleChange","api","fetch","then","response","json","kq","responseData","translatedText","catch","error","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGAC,IAAI,CAACC,SAAL,GAAiB;AACZC,EAAAA,MAAM,EAAEH,SAAS,CAACI,MADN;AAEZC,EAAAA,KAAK,EAAEL,SAAS,CAACM;AAFL,CAAjB;AAIAL,IAAI,CAACM,YAAL,GAAoB;AACfJ,EAAAA,MAAM,EAAE,CADO;AAEfE,EAAAA,KAAK,EAAE;AAFQ,CAApB;;AAKA,SAASJ,IAAT,CAAcO,KAAd,EAAqB;AAAA,MACVH,KADU,GACOG,KADP,CACVH,KADU;AAAA,MACHI,KADG,GACOD,KADP,CACHC,KADG;;AAAA,kBAEaX,QAAQ,CAAC,CAAD,CAFrB;AAAA;AAAA,MAETK,MAFS;AAAA,MAEDO,SAFC;;AAAA,mBAGSZ,QAAQ,CAAC,KAAD,CAHjB;AAAA;AAAA,MAGTa,IAHS;AAAA,MAGHC,OAHG;;AAAA,mBAImBd,QAAQ,CAACW,KAAD,CAJ3B;AAAA;AAAA,MAITI,SAJS;AAAA,MAIEC,YAJF;;AAMjB,WAASC,YAAT,GAAwB;AAEnB,QAAMC,GAAG,uDAAgDX,KAAhD,oBAAT;AACEY,IAAAA,KAAK,CAACD,GAAD,CAAL,CACAE,IADA,CACK,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADb,EAEAF,IAFA,CAEK,UAAAC,QAAQ,EAAI;AAChB,UAAME,EAAE,GAAGF,QAAQ,CAACG,YAAT,CAAsBC,cAAjC;AACAb,MAAAA,SAAS,CAACW,EAAD,CAAT;AACD,KALA,EAMAG,KANA,CAMM,UAACC,KAAD,EAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KARF;AASL;;AACF1B,EAAAA,SAAS,CAACgB,YAAY,EAAb,EAAgB,EAAhB,CAAT;AACAhB,EAAAA,SAAS,CACLW,SAAS,CAAC,EAAD,CADJ,EACS,CAACD,KAAD,CADT,CAAT;AAGI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAEM,YAAY,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BZ,MAA7B,CAFJ,CADJ;AAMP;;AACD,eAAeF,IAAf","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nDich.propTypes = {\r\n     ketqua: PropTypes.number,\r\n     quote: PropTypes.string,\r\n}\r\nDich.defaultProps = {\r\n     ketqua: 0,\r\n     quote: '',\r\n}\r\n\r\nfunction Dich(props) {\r\n    const{ quote, clear } = props; \r\n    const [ ketqua, setKetqua ] = useState(0);\r\n    const [ load, setLoad ] = useState(false);\r\n    const [ cleartran, setCleartran ] = useState(clear);\r\n\r\n    function handleChange() {\r\n        \r\n         const api = `https://api.mymemory.translated.net/get?q=${quote}&langpair=en|vi`;\r\n           fetch(api)\r\n          .then(response => response.json())\r\n          .then(response => {\r\n            const kq = response.responseData.translatedText;\r\n            setKetqua(kq);\r\n          })\r\n          .catch((error) => {\r\n              console.log(error)\r\n            })\r\n     }\r\n    useEffect(handleChange(),[]);\r\n    useEffect(\r\n        setKetqua(''),[clear]\r\n    )\r\n        return (\r\n            <div>\r\n                <button className=\"trans-button\" onClick={handleChange()}>Translate</button>\r\n                <div className=\"quote-tran\">{ketqua}</div>\r\n            </div>\r\n            )\r\n}\r\nexport default Dich;"]},"metadata":{},"sourceType":"module"}