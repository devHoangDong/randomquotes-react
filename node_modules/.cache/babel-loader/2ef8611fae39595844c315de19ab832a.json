{"ast":null,"code":"import _slicedToArray from \"/Users/macos/Desktop/Frontend/quotereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macos/Desktop/Frontend/quotereact/src/components/Dich.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useRef } from 'react';\nDich.propTypes = {\n  ketqua: PropTypes.string\n};\nDich.defaultProps = {\n  ketqua: ''\n};\n\nfunction Dich(props) {\n  var quote = props.quote,\n      clear = props.clear;\n  var load = clear;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      ketqua = _useState2[0],\n      setKetqua = _useState2[1];\n\n  function handleChange() {\n    var api = \"https://api.mymemory.translated.net/get?q=\".concat(quote, \"&langpair=en|vi\"); // fetch(api)\n    // .then(response => response.json())\n    // .then(response => {\n    //     const kq = response.responseData.translatedText;\n\n    setKetqua('dịch'); // })\n    // .catch((error) => {\n    //     console.log(error)\n    //   })\n  }\n\n  useEffect(function () {\n    handleChange();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"trans-button\",\n    onClick: handleChange(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Translate\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quote-tran\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, ketqua));\n}\n\nexport default Dich;","map":{"version":3,"sources":["/Users/macos/Desktop/Frontend/quotereact/src/components/Dich.js"],"names":["React","useState","useEffect","PropTypes","useRef","Dich","propTypes","ketqua","string","defaultProps","props","quote","clear","load","setKetqua","handleChange","api"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,OAAvB;AAGAC,IAAI,CAACC,SAAL,GAAiB;AACbC,EAAAA,MAAM,EAAEJ,SAAS,CAACK;AADL,CAAjB;AAGAH,IAAI,CAACI,YAAL,GAAoB;AAChBF,EAAAA,MAAM,EAAE;AADQ,CAApB;;AAIA,SAASF,IAAT,CAAcK,KAAd,EAAqB;AAAA,MACVC,KADU,GACOD,KADP,CACVC,KADU;AAAA,MACHC,KADG,GACOF,KADP,CACHE,KADG;AAEjB,MAAIC,IAAI,GAAGD,KAAX;;AAFiB,kBAGaX,QAAQ,CAAC,EAAD,CAHrB;AAAA;AAAA,MAGTM,MAHS;AAAA,MAGDO,SAHC;;AAKjB,WAASC,YAAT,GAAwB;AACpB,QAAMC,GAAG,uDAAgDL,KAAhD,oBAAT,CADoB,CAEpB;AACA;AACA;AACA;;AACIG,IAAAA,SAAS,CAAC,MAAD,CAAT,CANgB,CAOpB;AACA;AACA;AACA;AACH;;AACDZ,EAAAA,SAAS,CAAC,YAAM;AACZa,IAAAA,YAAY;AACf,GAFQ,EAEP,EAFO,CAAT;AAGI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAEA,YAAY,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BR,MAA7B,CAFJ,CADJ;AAMP;;AACD,eAAeF,IAAf","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useRef } from 'react';\r\n\r\n\r\nDich.propTypes = {\r\n    ketqua: PropTypes.string,\r\n}\r\nDich.defaultProps = {\r\n    ketqua: '',\r\n}\r\n\r\nfunction Dich(props) {\r\n    const{ quote, clear } = props; \r\n    var load = clear;\r\n    const [ ketqua, setKetqua ] = useState('');\r\n\r\n    function handleChange() {\r\n        const api = `https://api.mymemory.translated.net/get?q=${quote}&langpair=en|vi`;\r\n        // fetch(api)\r\n        // .then(response => response.json())\r\n        // .then(response => {\r\n        //     const kq = response.responseData.translatedText;\r\n            setKetqua('dịch');\r\n        // })\r\n        // .catch((error) => {\r\n        //     console.log(error)\r\n        //   })\r\n    }\r\n    useEffect(() => {\r\n        handleChange()\r\n    },[])\r\n        return (\r\n            <div>\r\n                <button className=\"trans-button\" onClick={handleChange()}>Translate</button>\r\n                <div className=\"quote-tran\">{ketqua}</div>\r\n            </div>\r\n            )\r\n}\r\nexport default Dich;"]},"metadata":{},"sourceType":"module"}