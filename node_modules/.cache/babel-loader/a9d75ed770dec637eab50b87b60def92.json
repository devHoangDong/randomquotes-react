{"ast":null,"code":"import _slicedToArray from \"/Users/macos/Desktop/Frontend/quotereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macos/Desktop/Frontend/quotereact/src/components/Dich.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nDich.propTypes = {\n  ketqua: PropTypes.string,\n  isLoading: PropTypes.bool\n};\nDich.defaultProps = {\n  ketqua: '',\n  isLoading: null\n};\n\nfunction Dich(props) {\n  var quote = props.quote,\n      clear = props.clear;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      ketqua = _useState2[0],\n      setKetqua = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  function handleChange() {\n    console.log(quote + clear);\n    var api = \"https://api.mymemory.translated.net/get?q=\".concat(quote, \"&langpair=en|vi\");\n    fetch(api).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      var kq = response.responseData.translatedText;\n      setKetqua(kq);\n      setIsLoading(true);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  useEffect(function () {\n    handleChange();\n  }, []);\n\n  if (isLoading && !clear) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"trans-button\",\n      onClick: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"Translate\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quote-tran\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, ketqua));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"trans-button\",\n      onClick: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Translate\"));\n  }\n}\n\nexport default Dich;","map":{"version":3,"sources":["/Users/macos/Desktop/Frontend/quotereact/src/components/Dich.js"],"names":["React","useState","useEffect","PropTypes","Dich","propTypes","ketqua","string","isLoading","bool","defaultProps","props","quote","clear","setKetqua","setIsLoading","handleChange","console","log","api","fetch","then","response","json","kq","responseData","translatedText","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGAC,IAAI,CAACC,SAAL,GAAiB;AACbC,EAAAA,MAAM,EAAEH,SAAS,CAACI,MADL;AAEbC,EAAAA,SAAS,EAAEL,SAAS,CAACM;AAFR,CAAjB;AAIAL,IAAI,CAACM,YAAL,GAAoB;AAChBJ,EAAAA,MAAM,EAAE,EADQ;AAEhBE,EAAAA,SAAS,EAAE;AAFK,CAApB;;AAKA,SAASJ,IAAT,CAAcO,KAAd,EAAqB;AAAA,MAEVC,KAFU,GAEOD,KAFP,CAEVC,KAFU;AAAA,MAEHC,KAFG,GAEOF,KAFP,CAEHE,KAFG;;AAAA,kBAGaZ,QAAQ,CAAC,EAAD,CAHrB;AAAA;AAAA,MAGTK,MAHS;AAAA,MAGDQ,SAHC;;AAAA,mBAIiBb,QAAQ,CAAC,KAAD,CAJzB;AAAA;AAAA,MAIVO,SAJU;AAAA,MAICO,YAJD;;AAMjB,WAASC,YAAT,GAAwB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,GAAGC,KAApB;AACA,QAAMM,GAAG,uDAAgDP,KAAhD,oBAAT;AACAQ,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADd,EAECF,IAFD,CAEM,UAAAC,QAAQ,EAAI;AACd,UAAME,EAAE,GAAGF,QAAQ,CAACG,YAAT,CAAsBC,cAAjC;AACAZ,MAAAA,SAAS,CAACU,EAAD,CAAT;AACAT,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,KAND,EAOCY,KAPD,CAOO,UAACC,KAAD,EAAW;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,KATH;AAUH;;AACD1B,EAAAA,SAAS,CAAC,YAAM;AACZc,IAAAA,YAAY;AACf,GAFQ,EAEP,EAFO,CAAT;;AAIA,MAAIR,SAAS,IAAI,CAACK,KAAlB,EAAyB;AACrB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAEG,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BV,MAA7B,CAFJ,CADJ;AAMC,GAPL,MAOW;AACH,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAEU,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,CADA;AAIH;AACR;;AACD,eAAeZ,IAAf","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nDich.propTypes = {\r\n    ketqua: PropTypes.string,\r\n    isLoading: PropTypes.bool,\r\n}\r\nDich.defaultProps = {\r\n    ketqua: '',\r\n    isLoading: null,\r\n}\r\n\r\nfunction Dich(props) {\r\n        \r\n    const{ quote, clear } = props; \r\n    const [ ketqua, setKetqua ] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    function handleChange() {\r\n        console.log(quote + clear);\r\n        const api = `https://api.mymemory.translated.net/get?q=${quote}&langpair=en|vi`;\r\n        fetch(api)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            const kq = response.responseData.translatedText;\r\n            setKetqua(kq);\r\n            setIsLoading(true);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n          })\r\n    }\r\n    useEffect(() => {\r\n        handleChange()\r\n    },[])\r\n\r\n    if (isLoading && !clear) {\r\n        return (\r\n            <div>\r\n                <button className=\"trans-button\" onClick={handleChange}>Translate</button>\r\n                <div className=\"quote-tran\">{ketqua}</div>\r\n            </div>\r\n            )\r\n        } else {\r\n            return (\r\n            <div>\r\n            <button className=\"trans-button\" onClick={handleChange}>Translate</button>\r\n            </div>)\r\n        }\r\n}\r\nexport default Dich;"]},"metadata":{},"sourceType":"module"}